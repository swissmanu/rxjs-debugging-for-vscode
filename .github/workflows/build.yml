name: Build

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - main
  release:
    types:
      - published

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14.x
      - name: Install Dependencies
        run: yarn
      - name: Lint Code
        run: yarn lint

  unit-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14.x
      - name: Install Dependencies
        run: yarn
      - name: Run Unit Tests
        run: yarn nx run-many --target=test --all --parallel

  integration-test:
    needs:
      - unit-test
      - lint
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14.x
      - name: Install Dependencies
        run: yarn

      - name: Build
        run: yarn nx run-many --target=build --all --parallel

      - name: Integration Test on Linux System
        if: runner.os == 'Linux'
        run: xvfb-run -a yarn nx integrationtest extension
      - name: Integration Test on Non-Linux System
        if: runner.os != 'Linux'
        run: yarn nx integrationtest extension

  snapshot:
    if: github.event != 'release'
    needs:
      - unit-test
      - integration-test
      - lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14.x
      - name: Install Dependencies
        run: yarn

      - name: Production Build
        run: yarn nx run-many --target=build --configuration=prod --projects=extension,runtime-webpack

      - name: "extension: Create VSIX"
        run: yarn nx package extension
        env:
          VSCE_PAT: ${{ secrets.AZURE_ACCESS_TOKEN }}
      - name: "runtime-wepack: Create TGZ"
        run: yarn nx package runtime-webpack

      - name: "extension: Upload snapshot artifact"
        uses: actions/upload-artifact@v2
        with:
          name: extension
          path: 'packages/extension/*.vsix'
          retention-days: 10
      - name: "runtime-webpack: Upload snapshot artifact"
        uses: actions/upload-artifact@v2
        with:
          name: runtime-webpack
          path: 'packages/runtime-webpack/*.tgz'
          retention-days: 10

  publish:
    if: github.event == 'release' && github.event.action == 'published'
    needs:
      - unit-test
      - integration-test
      - lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14.x
          registry-url: 'https://registry.npmjs.org'

      - name: Install Dependencies
        run: yarn
      - name: Production Build
        run: yarn nx run-many --target=build --configuration=prod --projects=extension,runtime-webpack

      - name: "Publish"
        run: yarn nx run-many --target=publish --projects=runtime-webpack
        env:
          VSCE_PAT: ${{ secrets.AZURE_ACCESS_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
